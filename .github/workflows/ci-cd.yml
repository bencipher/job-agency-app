name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Set environment variables
        run: |
          echo "export POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> $GITHUB_ENV
          echo "export POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> $GITHUB_ENV
          echo "export DB_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> $GITHUB_ENV
          echo "export POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}" >> $GITHUB_ENV
          echo "export POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}" >> $GITHUB_ENV
          echo "export DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}" >> $GITHUB_ENV
          echo "export DEBUG=${{ secrets.DEBUG }}" >> $GITHUB_ENV

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11.1

      - name: Install dependencies
        run: pip install pipenv && pipenv install --dev

      - name: Run tests
        run: |
          pipenv run python manage.py test

#  deploy:
#    needs: build-and-test
#    runs-on: ubuntu-latest
#    environment: production
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#
#      - name: Set up AWS credentials
#        uses: aws-actions/configure-aws-credentials@v1
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-region: us-east-1
#
#      - name: Install Terraform
#        uses: hashicorp/setup-terraform@v1
#        with:
#          terraform_version: 1.0.0
#
#      - name: Deploy infrastructure
#        run: |
#          cd infrastructure
#          terraform init
#          terraform apply -auto-approve
#
#      - name: Build and push Docker image
#        uses: docker/build-push-action@v2
#        with:
#          context: .
#          push: true
#          tags: my-django-app:latest
#
#      - name: Update Kubernetes deployment
#        uses: appleboy/kubectl-action@master
#        with:
#          args: set image deployment/my-django-app my-django-app=my-django-app:latest
#          kubeconfig: ${{ secrets.KUBECONFIG }}
